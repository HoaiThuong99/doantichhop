{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\doan-master-main\\\\doan-master-main\\\\dacn\\\\src\\\\components\\\\English\\\\HomeEnglish.js\";\nimport React, { Component } from 'react';\nimport ImageList from \"./ImageList\";\nimport Alphabet from \"./Alphabet\";\nimport \"./1.css\";\n\nclass HomeEnglish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toSpeak = id => {\n      var msg = new SpeechSynthesisUtterance(id);\n      window.speechSynthesis.speak(msg);\n    };\n\n    this.state = {\n      colors: [\"orange\", \"black\", \"red\", \"pink\", \"brown\", \"purple\", \"yellow\", \"blue\", \"green\", \"gray\"],\n      color: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const presentColor = this.state.colors.find(color => color === this.props.match.params.color);\n\n    if (presentColor) {\n      this.setState({\n        color: presentColor\n      });\n      this.toSpeak(presentColor);\n    } else {\n      this.props.history.push(\"/home-english/green\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"english\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"game-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, \"Play-Game\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"win\",\n      style: {\n        display: 'none',\n        marginTop: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, \"WIN\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/home-english/green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      src: back,\n      alt: \"\",\n      style: {\n        width: '5%',\n        left: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ImageList, {\n      code: this.state.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Alphabet, {\n      code: this.state.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default HomeEnglish;","map":{"version":3,"sources":["D:/Download/doan-master-main/doan-master-main/dacn/src/components/English/HomeEnglish.js"],"names":["React","Component","ImageList","Alphabet","HomeEnglish","constructor","props","toSpeak","id","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","state","colors","color","componentDidMount","presentColor","find","match","params","setState","history","push","render","display","marginTop","back","width","left"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,SAAP;;AACA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,OARmB,GAQRC,EAAD,IAAQ;AACd,UAAIC,GAAG,GAAG,IAAIC,wBAAJ,CAA6BF,EAA7B,CAAV;AACAG,MAAAA,MAAM,CAACC,eAAP,CAAuBC,KAAvB,CAA6BJ,GAA7B;AACH,KAXkB;;AAEf,SAAKK,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,OAAX,EAAoB,KAApB,EAA2B,MAA3B,EAAmC,OAAnC,EAA4C,QAA5C,EAAsD,QAAtD,EAAgE,MAAhE,EAAwE,OAAxE,EAAiF,MAAjF,CADC;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAKH;;AAKDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,YAAY,GAAG,KAAKJ,KAAL,CAAWC,MAAX,CAAkBI,IAAlB,CAAuBH,KAAK,IAAIA,KAAK,KAAK,KAAKV,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwBL,KAAlE,CAArB;;AACA,QAAIE,YAAJ,EAAkB;AACd,WAAKI,QAAL,CAAc;AACVN,QAAAA,KAAK,EAAEE;AADG,OAAd;AAGA,WAAKX,OAAL,CAAaW,YAAb;AACH,KALD,MAMI;AACA,WAAKZ,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CAAwB,qBAAxB;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,EAAE,EAAC,KAAP;AAAa,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAJJ,eAOI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,qBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,GAAG,EAAEC,IAAR;AAAc,MAAA,GAAG,EAAC,EAAlB;AAAqB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,IAAI,EAAE;AAArB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,eAUI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWE,KADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAaI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,KADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ;AAmBH;;AA9C+B;;AAiDpC,eAAeZ,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport ImageList from \"./ImageList\";\nimport Alphabet from \"./Alphabet\";\nimport \"./1.css\"\nclass HomeEnglish extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colors: [\"orange\", \"black\", \"red\", \"pink\", \"brown\", \"purple\", \"yellow\", \"blue\", \"green\", \"gray\"],\n            color: \"\"\n\n        }\n    }\n    toSpeak = (id) => {\n        var msg = new SpeechSynthesisUtterance(id);\n        window.speechSynthesis.speak(msg);\n    }\n    componentDidMount() {\n        const presentColor = this.state.colors.find(color => color === this.props.match.params.color);\n        if (presentColor) {\n            this.setState({\n                color: presentColor\n            })\n            this.toSpeak(presentColor)\n        }\n        else{\n            this.props.history.push(\"/home-english/green\")\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"english\">\n                <div>\n                    <h1 className=\"game-title\">Play-Game</h1>\n                </div>\n                <div>\n                    <h1 id=\"win\" style={{display: 'none', marginTop: 100}}>WIN</h1>\n                </div>\n                <Link to=\"/home-english/green\">\n                    <a src={back} alt=\"\" style={{ width: '5%', left: 100 }} />\n                </Link>\n                <ImageList\n                    code={this.state.color}\n                />\n                <Alphabet\n                    code={this.state.color}\n                />\n            </div>\n        );\n    }\n}\n\nexport default HomeEnglish;"]},"metadata":{},"sourceType":"module"}