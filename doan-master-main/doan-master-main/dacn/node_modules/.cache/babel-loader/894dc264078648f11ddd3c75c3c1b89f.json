{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\doan-master-main\\\\doan-master-main\\\\dacn\\\\src\\\\components\\\\FlipFlop1.js\";\nimport React, { Component } from 'react';\n\nclass MemoryBlock {\n  constructor(id, frontImage, backImage) {\n    this.id = id;\n    this.blockCSS = \"block\";\n    this.frontImage = frontImage;\n    this.backImage = backImage;\n    this.front = false;\n    this.back = true;\n    this.frontCSS = \"block-front block-face\";\n    this.backCSS = \"block-back block-face\";\n    this.imgCSS = \"block-value\";\n  }\n\n}\n\nclass FlipFlop1 extends Component {\n  componentDidMount() {\n    var countdown;\n\n    function startTimer(duration, display) {\n      var timer = 60 * duration,\n          minutes,\n          seconds;\n      countdown = setInterval(() => {\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n        display.textContent = `Time ${minutes}:${seconds}`;\n\n        if (--timer < 0) {\n          gameOver();\n        }\n      }, 1000);\n    } // for creating divs and shuffling blocks\n\n\n    var divblock, blockData, blockFrontImages, memoryBlockArr, blockFrontImagesAll, shuffledBlocks; // for implementing flip n match logic\n\n    var currentlyFlippedArr, matchedCount, blockToMatch1, blockToMatch2; // for implementing game info block\n\n    var flipCounter,\n        gameOn = false;\n    var overlays = Array.from(document.getElementsByClassName('overlay-text'));\n    overlays.forEach(overlay => {\n      overlay.addEventListener('click', () => {\n        overlay.classList.remove('visible');\n        resetGame();\n        init();\n      });\n    });\n\n    function startCountdown() {\n      return setInterval(() => {\n        this.timeRemaining--;\n        this.timer.innerText = this.timeRemaining;\n        if (this.timeRemaining === 0) this.gameOver();\n      }, 1000);\n    }\n\n    function resetGame() {\n      var elements = document.getElementsByClassName(\"block\");\n\n      while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n      }\n    }\n\n    function init() {\n      //initializing values\n      gameOn = true;\n      memoryBlockArr = new Array(18);\n      blockFrontImagesAll = [];\n      shuffledBlocks = [];\n      currentlyFlippedArr = [];\n      matchedCount = 0;\n      flipCounter = 0;\n      var minutes = 2;\n      var display = document.getElementById(\"Timer\");\n      blockFrontImages = [\"Images/a.jpg\", \"Images/b.jpg\", \"Images/c.jpg\", \"Images/g.jpg\", \"Images/h.jpg\", \"Images/l.jpg\", \"Images/o.jpg\", \"Images/r.jpg\", \"Images/t.jpg\"]; // init();\n\n      startTimer(minutes, display);\n      blockFrontImagesAll = blockFrontImages.concat(blockFrontImages);\n      shuffledBlocks = shuffleBlocks(blockFrontImagesAll);\n      document.getElementById(\"Flips\").innerText = `Flips: ${flipCounter}`;\n      createElements();\n    }\n\n    function createElements() {\n      var finalCount = shuffledBlocks.length;\n\n      for (var i = 0; i < finalCount; i++) {\n        var cardFront = shuffledBlocks.pop();\n        blockData = new MemoryBlock(i, cardFront, \"Images/pokemonBack.jpg\");\n        memoryBlockArr[i] = blockData;\n        divblock = document.createElement(\"div\");\n        var divblockFront = document.createElement(\"div\");\n        var divblockBack = document.createElement(\"div\");\n        var imgFront = document.createElement(\"img\");\n        var imgBack = document.createElement(\"img\");\n        divblock.id = memoryBlockArr[i].id;\n        divblock.className = memoryBlockArr[i].blockCSS;\n        divblockFront.className = memoryBlockArr[i].frontCSS;\n        divblockBack.className = memoryBlockArr[i].backCSS;\n        imgFront.src = memoryBlockArr[i].frontImage;\n        imgFront.className = memoryBlockArr[i].imgCSS;\n        imgBack.src = memoryBlockArr[i].backImage;\n        imgBack.className = memoryBlockArr[i].imgCSS;\n        divblockFront.append(imgFront);\n        divblockBack.append(imgBack);\n        divblock.append(divblockFront);\n        divblock.append(divblockBack);\n        divblock.addEventListener('click', flipBlock);\n        document.getElementById(\"gameMainBlock\").append(divblock);\n      }\n    }\n\n    function hideElements() {\n      var hideBlocks = Array.from(document.getElementsByClassName('block'));\n\n      for (var i = 0; i < hideBlocks.length; i++) {\n        document.getElementById(hideBlocks[i].id).classList.remove('visible');\n      }\n    }\n\n    function shuffleBlocks(blocksArray) {\n      var currentIndex = blocksArray.length,\n          temporaryValue,\n          randomIndex; // While there remain elements to shuffle...\n\n      while (currentIndex !== 0) {\n        // Pick an element from the remaining lot...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1; // Swap it with the current element.\n\n        temporaryValue = blocksArray[currentIndex];\n        blocksArray[currentIndex] = blocksArray[randomIndex];\n        blocksArray[randomIndex] = temporaryValue;\n      }\n\n      return blocksArray;\n    }\n\n    function flipBlock() {\n      if (gameOn === true) {\n        this.classList.add('visible');\n        flipCounter += 1;\n        document.getElementById(\"Flips\").innerText = `Flips: ${flipCounter}`;\n\n        if (blockToMatch1 !== this.id) {\n          if (currentlyFlippedArr.length === 0) {\n            currentlyFlippedArr.push(this.innerHTML);\n            blockToMatch1 = this.id;\n          } else if (currentlyFlippedArr.length === 1) {\n            currentlyFlippedArr.push(this.innerHTML);\n            blockToMatch2 = this.id;\n\n            if (currentlyFlippedArr[0] === currentlyFlippedArr[1]) {\n              blocksMatched();\n            } else {\n              gameOn = false;\n\n              var wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n              Promise.resolve(800).then(() => wait(800)).then(() => {\n                revertFlip();\n              });\n            }\n          }\n        }\n      }\n    }\n\n    function blocksMatched() {\n      currentlyFlippedArr = [];\n      matchedCount += 2;\n      document.getElementById(blockToMatch1).removeEventListener('click', flipBlock);\n      document.getElementById(blockToMatch2).removeEventListener('click', flipBlock);\n\n      if (matchedCount === memoryBlockArr.length) {\n        // if (matchedCount === 2) {\n        var wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n        Promise.resolve(1000).then(() => wait(1000)).then(() => {\n          showWin();\n        });\n      }\n    }\n\n    function revertFlip() {\n      // alert(blockToMatch1 + \"  trying to revert  \" + blockToMatch2);\n      document.getElementById(blockToMatch1).classList.remove('visible');\n      document.getElementById(blockToMatch2).classList.remove('visible');\n      currentlyFlippedArr = [];\n      gameOn = true;\n    }\n\n    function showWin() {\n      hideElements();\n      gameOn = false;\n      document.getElementById('winText').classList.add('visible');\n      clearInterval(countdown);\n    }\n\n    function gameOver() {\n      // hideElements();\n      gameOn = false;\n      document.getElementById('gameOverText').classList.add('visible');\n      clearInterval(countdown);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"flipflop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"game-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }, \"Play-Game\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay-text visible\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, \"Click to Start\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"gameOverText\",\n      className: \"overlay-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, \"GAME OVER!\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"overlay-text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, \"Click to Restart\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"winText\",\n      className: \"overlay-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, \"YOU WIN!\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"overlay-text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, \"Click to Restart\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"gameMainBlock\",\n      className: \"game-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"gameInfoBlock\",\n      className: \"game-info-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"Timer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"Flips\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default FlipFlop1;","map":{"version":3,"sources":["D:/Download/doan-master-main/doan-master-main/dacn/src/components/FlipFlop1.js"],"names":["React","Component","MemoryBlock","constructor","id","frontImage","backImage","blockCSS","front","back","frontCSS","backCSS","imgCSS","FlipFlop1","componentDidMount","countdown","startTimer","duration","display","timer","minutes","seconds","setInterval","parseInt","textContent","gameOver","divblock","blockData","blockFrontImages","memoryBlockArr","blockFrontImagesAll","shuffledBlocks","currentlyFlippedArr","matchedCount","blockToMatch1","blockToMatch2","flipCounter","gameOn","overlays","Array","from","document","getElementsByClassName","forEach","overlay","addEventListener","classList","remove","resetGame","init","startCountdown","timeRemaining","innerText","elements","length","parentNode","removeChild","getElementById","concat","shuffleBlocks","createElements","finalCount","i","cardFront","pop","createElement","divblockFront","divblockBack","imgFront","imgBack","className","src","append","flipBlock","hideElements","hideBlocks","blocksArray","currentIndex","temporaryValue","randomIndex","Math","floor","random","add","push","innerHTML","blocksMatched","wait","ms","Promise","resolve","setTimeout","then","revertFlip","removeEventListener","showWin","clearInterval","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nclass MemoryBlock {\r\n  constructor(id, frontImage, backImage) {\r\n    this.id = id;\r\n    this.blockCSS = \"block\";\r\n    this.frontImage = frontImage;\r\n    this.backImage = backImage;\r\n    this.front = false;\r\n    this.back = true;\r\n    this.frontCSS = \"block-front block-face\";\r\n    this.backCSS = \"block-back block-face\";\r\n    this.imgCSS = \"block-value\";\r\n\r\n  }\r\n}\r\nclass FlipFlop1 extends Component {\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    var countdown;\r\n\r\n    function startTimer(duration, display) {\r\n      var timer = 60 * duration, minutes, seconds;\r\n      countdown = setInterval(() => {\r\n        minutes = parseInt(timer / 60, 10);\r\n        seconds = parseInt(timer % 60, 10);\r\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n        display.textContent = `Time ${minutes}:${seconds}`;\r\n        if (--timer < 0) {\r\n          gameOver();\r\n        }\r\n      }, 1000);\r\n    }\r\n    // for creating divs and shuffling blocks\r\n    var divblock, blockData, blockFrontImages, memoryBlockArr, blockFrontImagesAll, shuffledBlocks;\r\n    // for implementing flip n match logic\r\n    var currentlyFlippedArr, matchedCount, blockToMatch1, blockToMatch2;\r\n    // for implementing game info block\r\n    var flipCounter, gameOn = false;\r\n\r\n    var overlays = Array.from(document.getElementsByClassName('overlay-text'));\r\n    overlays.forEach(overlay => {\r\n      overlay.addEventListener('click', () => {\r\n        overlay.classList.remove('visible');\r\n        resetGame();\r\n        init();\r\n\r\n      });\r\n    });\r\n\r\n    function startCountdown() {\r\n      return setInterval(() => {\r\n        this.timeRemaining--;\r\n        this.timer.innerText = this.timeRemaining;\r\n        if (this.timeRemaining === 0)\r\n          this.gameOver();\r\n      }, 1000);\r\n    }\r\n\r\n    function resetGame() {\r\n      var elements = document.getElementsByClassName(\"block\");\r\n      while (elements.length > 0) {\r\n        elements[0].parentNode.removeChild(elements[0]);\r\n      }\r\n    }\r\n\r\n    function init() {\r\n      //initializing values\r\n      gameOn = true;\r\n      memoryBlockArr = new Array(18);\r\n      blockFrontImagesAll = [];\r\n      shuffledBlocks = [];\r\n      currentlyFlippedArr = [];\r\n      matchedCount = 0;\r\n      flipCounter = 0;\r\n      var minutes = 2;\r\n      var display = document.getElementById(\"Timer\");\r\n      blockFrontImages = [\r\n        \"Images/a.jpg\",\r\n        \"Images/b.jpg\",\r\n        \"Images/c.jpg\",\r\n        \"Images/g.jpg\",\r\n        \"Images/h.jpg\",\r\n        \"Images/l.jpg\",\r\n        \"Images/o.jpg\",\r\n        \"Images/r.jpg\",\r\n        \"Images/t.jpg\"];\r\n      // init();\r\n      startTimer(minutes, display);\r\n      blockFrontImagesAll = blockFrontImages.concat(blockFrontImages);\r\n      shuffledBlocks = shuffleBlocks(blockFrontImagesAll);\r\n      document.getElementById(\"Flips\").innerText = `Flips: ${flipCounter}`;\r\n      createElements();\r\n    }\r\n\r\n\r\n\r\n    function createElements() {\r\n      var finalCount = shuffledBlocks.length;\r\n      for (var i = 0; i < finalCount; i++) {\r\n        var cardFront = shuffledBlocks.pop();\r\n        blockData = new MemoryBlock(i, cardFront, \"Images/pokemonBack.jpg\");\r\n        memoryBlockArr[i] = blockData;\r\n\r\n        divblock = document.createElement(\"div\");\r\n        var divblockFront = document.createElement(\"div\");\r\n        var divblockBack = document.createElement(\"div\");\r\n        var imgFront = document.createElement(\"img\");\r\n        var imgBack = document.createElement(\"img\");\r\n        divblock.id = memoryBlockArr[i].id;\r\n        divblock.className = memoryBlockArr[i].blockCSS;\r\n        divblockFront.className = memoryBlockArr[i].frontCSS;\r\n        divblockBack.className = memoryBlockArr[i].backCSS;\r\n        imgFront.src = memoryBlockArr[i].frontImage;\r\n        imgFront.className = memoryBlockArr[i].imgCSS;\r\n        imgBack.src = memoryBlockArr[i].backImage;\r\n        imgBack.className = memoryBlockArr[i].imgCSS;\r\n        divblockFront.append(imgFront);\r\n        divblockBack.append(imgBack);\r\n        divblock.append(divblockFront);\r\n        divblock.append(divblockBack);\r\n        divblock.addEventListener('click', flipBlock);\r\n        document.getElementById(\"gameMainBlock\").append(divblock);\r\n      }\r\n    }\r\n\r\n    function hideElements() {\r\n      var hideBlocks = Array.from(document.getElementsByClassName('block'));\r\n      for (var i = 0; i < hideBlocks.length; i++) {\r\n        document.getElementById(hideBlocks[i].id).classList.remove('visible');\r\n      }\r\n    }\r\n\r\n    function shuffleBlocks(blocksArray) {\r\n      var currentIndex = blocksArray.length, temporaryValue, randomIndex;\r\n      // While there remain elements to shuffle...\r\n      while (currentIndex !== 0) {\r\n        // Pick an element from the remaining lot...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // Swap it with the current element.\r\n        temporaryValue = blocksArray[currentIndex];\r\n        blocksArray[currentIndex] = blocksArray[randomIndex];\r\n        blocksArray[randomIndex] = temporaryValue;\r\n      }\r\n      return blocksArray;\r\n    }\r\n\r\n    function flipBlock() {\r\n      if (gameOn === true) {\r\n        this.classList.add('visible');\r\n        flipCounter += 1;\r\n        document.getElementById(\"Flips\").innerText = `Flips: ${flipCounter}`;\r\n\r\n\r\n        if (blockToMatch1 !== this.id) {\r\n          if (currentlyFlippedArr.length === 0) {\r\n            currentlyFlippedArr.push(this.innerHTML);\r\n            blockToMatch1 = this.id;\r\n          }\r\n          else if (currentlyFlippedArr.length === 1) {\r\n            currentlyFlippedArr.push(this.innerHTML);\r\n            blockToMatch2 = this.id;\r\n            if (currentlyFlippedArr[0] === currentlyFlippedArr[1]) {\r\n              blocksMatched();\r\n            }\r\n            else {\r\n              gameOn = false;\r\n              var wait = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n              Promise.resolve(800).then(() => wait(800)).then(() => { revertFlip(); });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function blocksMatched() {\r\n      currentlyFlippedArr = [];\r\n      matchedCount += 2;\r\n      document.getElementById(blockToMatch1).removeEventListener('click', flipBlock);\r\n      document.getElementById(blockToMatch2).removeEventListener('click', flipBlock);\r\n      if (matchedCount === memoryBlockArr.length) {\r\n        // if (matchedCount === 2) {\r\n        var wait = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n        Promise.resolve(1000).then(() => wait(1000)).then(() => { showWin(); });\r\n      }\r\n    }\r\n\r\n    function revertFlip() {\r\n      // alert(blockToMatch1 + \"  trying to revert  \" + blockToMatch2);\r\n      document.getElementById(blockToMatch1).classList.remove('visible');\r\n      document.getElementById(blockToMatch2).classList.remove('visible');\r\n      currentlyFlippedArr = [];\r\n      gameOn = true;\r\n    }\r\n\r\n    function showWin() {\r\n      hideElements();\r\n      gameOn = false;\r\n      document.getElementById('winText').classList.add('visible');\r\n      clearInterval(countdown);\r\n    }\r\n\r\n    function gameOver() {\r\n      // hideElements();\r\n      gameOn = false;\r\n      document.getElementById('gameOverText').classList.add('visible');\r\n      clearInterval(countdown);\r\n    }\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"flipflop\">\r\n        <h1 className=\"game-title\">Play-Game</h1>\r\n        <div className=\"overlay-text visible\">\r\n          Click to Start\r\n        </div>\r\n        <div id=\"gameOverText\" className=\"overlay-text\">\r\n          GAME OVER!\r\n          <span className=\"overlay-text-small\">Click to Restart</span>\r\n        </div>\r\n        <div id=\"winText\" className=\"overlay-text\">\r\n          YOU WIN!\r\n          <span className=\"overlay-text-small\">Click to Restart</span>\r\n        </div>\r\n        <div id=\"gameMainBlock\" className=\"game-container\">\r\n          <div id=\"gameInfoBlock\" className=\"game-info-block\">\r\n            <div className=\"game-info\">\r\n              <span id=\"Timer\" />\r\n            </div>\r\n            <div className=\"game-info\">\r\n              <span id=\"Flips\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlipFlop1;"]},"metadata":{},"sourceType":"module"}