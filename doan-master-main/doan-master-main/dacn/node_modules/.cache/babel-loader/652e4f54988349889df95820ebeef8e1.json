{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\doan-master-main\\\\doan-master-main\\\\dacn\\\\src\\\\components\\\\ChitietChude3.js\";\nimport React, { Component } from 'react';\nimport red from './image/red.jpg';\nimport blue from './image/blue.jpg';\nimport purple from './image/purple.jpg';\nimport orange from './image/orange.jpg';\nimport black from './image/black.jpg';\nimport white from './image/white.jpg';\nimport green from './image/green.jpg';\nimport yellow from './image/yellow.jpg';\nimport brown from './image/brown.jpg';\nimport pink from './image/pink.jpg';\nimport back from './image/backbutton.png';\nimport { Link } from 'react-router-dom';\n\nclass ChitietChude3 extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.toSpeak = id => {\n      var msg = new SpeechSynthesisUtterance(id);\n      window.speechSynthesis.speak(msg);\n    };\n\n    this.state = {\n      images: [{\n        url: red,\n        code: \"red\"\n      }, {\n        url: blue,\n        code: \"blue\"\n      }, {\n        url: purple,\n        code: \"purple\"\n      }, {\n        url: orange,\n        code: \"orange\"\n      }, {\n        url: black,\n        code: \"black\"\n      }, {\n        url: white,\n        code: \"white\"\n      }, {\n        url: green,\n        code: \"green\"\n      }, {\n        url: yellow,\n        code: \"yellow\"\n      }, {\n        url: brown,\n        code: \"brown\"\n      }, {\n        url: pink,\n        code: \"pink\"\n      }],\n      url: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const chu = this.state.images.find(img => img.code === this.props.match.params.chu);\n    console.log(chu);\n\n    if (chu) {\n      this.setState({\n        url: chu.url\n      });\n      this.toSpeak(chu.code);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"noidung\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/chude3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: back,\n      alt: \"\",\n      style: {\n        width: '5%',\n        left: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.url,\n      onClick: () => this.componentDidMount(),\n      alt: \"\",\n      style: {\n        borderRadius: '10%'\n      },\n      width: \"600px\",\n      height: \"400px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ChitietChude3;","map":{"version":3,"sources":["D:/Download/doan-master-main/doan-master-main/dacn/src/components/ChitietChude3.js"],"names":["React","Component","red","blue","purple","orange","black","white","green","yellow","brown","pink","back","Link","ChitietChude3","constructor","props","context","toSpeak","id","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","state","images","url","code","componentDidMount","chu","find","img","match","params","console","log","setState","render","width","left","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport red from './image/red.jpg'\nimport blue from './image/blue.jpg'\nimport purple from './image/purple.jpg'\nimport orange from './image/orange.jpg'\nimport black from './image/black.jpg'\nimport white from './image/white.jpg'\nimport green from './image/green.jpg'\nimport yellow from './image/yellow.jpg'\nimport brown from './image/brown.jpg'\nimport pink from './image/pink.jpg'\nimport back from './image/backbutton.png'\nimport { Link } from 'react-router-dom';\nclass ChitietChude3 extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            images: [{ url: red, code: \"red\" }, { url: blue, code: \"blue\" }, { url: purple, code: \"purple\" }, { url: orange, code: \"orange\" }, { url: black, code: \"black\" }, { url: white, code: \"white\" }, { url: green, code: \"green\" }, { url: yellow, code: \"yellow\" }, { url: brown, code: \"brown\" }, { url: pink, code: \"pink\" }],\n            url: \"\"\n        }\n    }\n    toSpeak = (id) => {\n        var msg = new SpeechSynthesisUtterance(id);\n        window.speechSynthesis.speak(msg);\n    }\n    componentDidMount() {\n        const chu = this.state.images.find(img => img.code === this.props.match.params.chu);\n        console.log(chu);\n        \n        if (chu) {\n            this.setState({ url: chu.url })\n            this.toSpeak(chu.code)\n        }\n    }\n    render() {\n        return (\n            <div id=\"noidung\">\n                <Link to=\"/chude3\">\n                    <img src={back} alt=\"\" style={{ width: '5%', left: 100 }} />\n                </Link>\n                <img src={this.state.url} onClick={() => this.componentDidMount()} alt=\"\" style={{ borderRadius: '10%' }} width=\"600px\" height=\"400px\" />\n            </div>\n        );\n    }\n}\n\nexport default ChitietChude3;"]},"metadata":{},"sourceType":"module"}